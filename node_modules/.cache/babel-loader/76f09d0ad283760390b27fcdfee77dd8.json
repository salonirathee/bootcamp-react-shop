{"ast":null,"code":"import * as actionTypes from \"./shopping-types\";\nimport data from \"../../db\";\nconst INITIAL_STATE = {\n  products: [],\n  //id, name, image, price, desc, size\n  cart: [],\n  //id, name, image, price, desc, size, qty\n  currentItem: null\n};\n\nconst shopReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      //Item data from products array\n      const item = state.products.find(product => product.id === action.payload.id); // Check if Item is in cart already\n\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }]\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    case actionTypes.ADJUST_ITEM_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: +action.payload.qty\n        } : item)\n      };\n\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return { ...state,\n        currentItem: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/Saloni Rathee/Desktop/react-shop/src/Redux/shopping/shopping-reducer.js"],"names":["actionTypes","data","INITIAL_STATE","products","cart","currentItem","shopReducer","state","action","type","ADD_TO_CART","item","find","product","id","payload","inCart","map","qty","REMOVE_FROM_CART","filter","ADJUST_ITEM_QTY","LOAD_CURRENT_ITEM"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,UAAjB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAGnB;AACDC,EAAAA,IAAI,EAAE,EAJc;AAIV;AACVC,EAAAA,WAAW,EAAE;AALO,CAAtB;;AAQA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,WAAjB;AACE;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACJ,QAAN,CAAeS,IAAf,CACVC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACO,OAAP,CAAeD,EADhC,CAAb,CAFF,CAKE;;AACA,YAAME,MAAM,GAAGT,KAAK,CAACH,IAAN,CAAWQ,IAAX,CAAiBD,IAAD,IAC7BA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAA3B,GAAgC,IAAhC,GAAuC,KAD1B,CAAf;AAGA,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,IAAI,EAAEY,MAAM,GACRT,KAAK,CAACH,IAAN,CAAWa,GAAX,CAAgBN,IAAD,IACbA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAA3B,GACI,EAAE,GAAGH,IAAL;AAAWO,UAAAA,GAAG,EAAEP,IAAI,CAACO,GAAL,GAAW;AAA3B,SADJ,GAEIP,IAHN,CADQ,GAMR,CAAC,GAAGJ,KAAK,CAACH,IAAV,EAAgB,EAAE,GAAGO,IAAL;AAAWO,UAAAA,GAAG,EAAE;AAAhB,SAAhB;AARC,OAAP;;AAWF,SAAKlB,WAAW,CAACmB,gBAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWgB,MAAX,CAAmBT,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAAvD;AAFD,OAAP;;AAMF,SAAKd,WAAW,CAACqB,eAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWa,GAAX,CAAgBN,IAAD,IACnBA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAeD,EAA3B,GACI,EAAE,GAAGH,IAAL;AAAWO,UAAAA,GAAG,EAAE,CAACV,MAAM,CAACO,OAAP,CAAeG;AAAhC,SADJ,GAEIP,IAHA;AAFD,OAAP;;AAUF,SAAKX,WAAW,CAACsB,iBAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACO;AAFf,OAAP;;AAMF;AACE,aAAOR,KAAP;AA/CJ;AAiDD,CAlDD;;AAoDA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"./shopping-types\";\r\nimport data from \"../../db\";\r\n\r\nconst INITIAL_STATE = {\r\n  products: [],\r\n   \r\n   //id, name, image, price, desc, size\r\n  cart: [], //id, name, image, price, desc, size, qty\r\n  currentItem: null,\r\n};\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      //Item data from products array\r\n      const item = state.products.find(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n      // Check if Item is in cart already\r\n      const inCart = state.cart.find((item) =>\r\n        item.id === action.payload.id ? true : false\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: inCart\r\n          ? state.cart.map((item) =>\r\n              item.id === action.payload.id\r\n                ? { ...item, qty: item.qty + 1 }\r\n                : item\r\n            )\r\n          : [...state.cart, { ...item, qty: 1 }],\r\n      };\r\n\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload.id),\r\n      };\r\n\r\n\r\n    case actionTypes.ADJUST_ITEM_QTY:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, qty: +action.payload.qty }\r\n            : item\r\n        ),\r\n      };\r\n\r\n\r\n    case actionTypes.LOAD_CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        currentItem: action.payload,\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default shopReducer;\r\n"]},"metadata":{},"sourceType":"module"}